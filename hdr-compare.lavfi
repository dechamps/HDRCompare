# This is a ffmpeg filtergraph: https://ffmpeg.org/ffmpeg-filters.html
#
# Note that the usual filtergraph "language" doesn't support comments. Lines
# beginning with "#", such as these, need to be filtered out before parsing.

[vid1] null [hdr_original];
[vid2] null [sdr_original];

# We assume the SDR source is 1080p (as they often are). The HDR source will
# likely be larger (typically UHD). We scale down the HDR source so that the
# comparison is fair and focuses on colour differences only.
#
# TODO: the downscaling might dim very small, sharp highlights (e.g. stars in a
# dark sky) due to local averaging, which is unfair to the HDR side. Investigate
# if this is a problem with the default downscaler and if so, use a sharper one.
[hdr_original] scale = size=hd1080 [hdr_scaled];

[hdr_scaled]
    drawtext = text=HDR : fontfile=c:/windows/fonts/arial.ttf : x=(1/4)*main_w-text_w/2 : y=main_h-text_h : fontcolor=#888888 : box=1 : boxcolor=black,
    drawtext = text=HDR : fontfile=c:/windows/fonts/arial.ttf : x=(3/4)*main_w-text_w/2 : y=main_h-text_h : fontcolor=#888888 : box=1 : boxcolor=black
[hdr_labelled];

[sdr_original]
    drawtext = text=SDR : fontfile=c:/windows/fonts/arial.ttf : x=(1/4)*main_w-text_w/2 : y=main_h-text_h : fontcolor=#888888 : box=1 : boxcolor=black,
    drawtext = text=SDR : fontfile=c:/windows/fonts/arial.ttf : x=(3/4)*main_w-text_w/2 : y=main_h-text_h : fontcolor=#888888 : box=1 : boxcolor=black
[sdr_labelled];

# On even seconds, display the left side of SDR on the left; on odd seconds,
# display the right side of SDR on the right.
[sdr_labelled] crop = out_w=in_w/2 : x='mod(floor(t),2)*(in_w/2)' [sdr_cropped];
[hdr_labelled] [sdr_cropped] overlay = x='mod(floor(t),2)*overlay_w' [vo]
